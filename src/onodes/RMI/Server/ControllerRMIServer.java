package onodes.RMI.Server;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.rmi.RemoteException;

import onodes.RMI.ControllerRMI;

/**
 *
 * DO NOT EDIT THIS FILE IT BELONG TO THE FRAMEWORK
 * 
 * @author groupe1
 *
 */
public class ControllerRMIServer extends
		ControllerRMI<ModelRMIServer, ViewRMIServer> {
	public ControllerRMIServer() throws RemoteException {
		super();
		this.model = new ModelRMIServer();
		// this.view = new VRMIServer();
	}

	public void up() {
		// model.up();

		Class toto;
		try {
		toto = Class.forName("onodes.RMI.Server.ModelRMIServer");

		String methodName = "upa"; // ds ton cas
		Class[] paramClasses = { String.class }; // un seul parametre de
													// type String
		Method method = toto.getMethod(methodName, paramClasses);
		
		Object[] params = {"test"};
		method.invoke(model, params);
		} catch (ClassNotFoundException | NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e ) {
			e.getMessage();
		}
	}
}
