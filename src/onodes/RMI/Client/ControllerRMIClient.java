package onodes.RMI.Client;

import java.rmi.RemoteException;

import onodes.RMI.ControllerRMI;
import onodes.RMI.Server.ModelRMIServerRemote;
import pnodes.monappli.rmiclient.ModelMonAppRMIClient;
import pnodes.monappli.rmiclient.ViewMonAppRMIClient;

/*
 * Besoin de conserver la même architecture de package dans Le serveur comme le client
 * afin que les classes puissent être trouvé lors du Naming.lookup()
 */

/**
 *
 * DO NOT EDIT THIS FILE IT BELONG TO THE FRAMEWORK
 * 
 * @author groupe1
 *
 */
public abstract class ControllerRMIClient<MR extends ModelRMIServerRemote, M extends ModelRMIClient, V extends ViewRMIClient>
		extends ControllerRMI<M, V> {

	private MR mRMIServerRemote;

	public ControllerRMIClient(M model, V view) throws RemoteException {
		super(model, view);
		setLocalMRMIServerRemote();
	}
	
	protected void setLocalMRMIServerRemote() {
		try {
			this.mRMIServerRemote = (MR) model.getMRMIServerRemote();
		} catch (NullPointerException e) {
			e.getMessage();
		}
	}
	
	public MR getmRMIServerRemote() {
		return mRMIServerRemote;
	}
}
