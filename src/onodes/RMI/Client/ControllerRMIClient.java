package onodes.RMI.Client;

import java.rmi.RemoteException;

import onodes.RMI.ControllerRMI;

/*
 * Besoin de conserver la même architecture de package dans Le serveur comme le client
 * afin que les classes puissent être trouvé lors du Naming.lookup()
 */

/**
*
* DO NOT EDIT THIS FILE IT BELONG TO THE FRAMEWORK
* @author groupe1
*
*/
public abstract class ControllerRMIClient<M extends ModelRMIClient, V extends ViewRMIClient> extends ControllerRMI<M, V> {
	
	public ControllerRMIClient() throws RemoteException {
		super();
	}
	
	public ControllerRMIClient(M model, V view) throws RemoteException {
		super(model, view);
	}
	

/*
	public ControllerRMIClient() throws RemoteException {
		super();
		this.model = new ModelRMIClient();
		//this.view = new VRMIServer();
	}
	

	public ControllerRMIClient(String ip) throws RemoteException {
		super();
		this.model = new ModelRMIClient(ip);
		//this.view = new VRMIServer();
	}

	public ControllerRMIClient(ModelRMIClient model, ViewRMIClient view) {
		super(model, view);
		// TODO Auto-generated constructor stub
	}
	*/
}
