package core.pcore;

import java.rmi.RemoteException;

import onodes.RMI.Server.*;
import onodes.RMI.Client.*;
import pnodes.monAppClient.ControllerMonAppClient;
import pnodes.monAppServer.ControllerMonAppServer;


/**
*
* DO NOT EDIT THIS FILE IT BELONG TO THE FRAMEWORK
* @author groupe1
*
*/
public final class CoreApp {
	
	/**
	 * Main code of the application
	 * DevOps Write some code here
	 * @param args
	 */
	public static void mainApp(String[] args) {
		
		/*
		try {
		 
			ControllerMonAppRMIServer test = new ControllerMonAppRMIServer();
			
			Thread.sleep(100);
			ControllerMonApp test1 = new ControllerMonApp();
			
			//ControllerMonAppRMIClient test2 = new ControllerMonAppRMIClient();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		*/

		try {
			ControllerMonAppServer test = new ControllerMonAppServer();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		try {
			Thread.sleep(100);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		try {
			ControllerMonAppClient testclient = new ControllerMonAppClient();
			testclient.start();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		//ControllerRMIServer<ModelRMIServer<ModelRMIServerRemote<ModelRMIClientRemote>, ModelRMIClientRemote>, ViewRMIServer> test = new ControllerRMIServer<ModelRMIServer, ViewRMIServer>(new ModelRMIServer<ModelRMIServerRemote, ModelRMIClientRemote>, new ViewRMIServer())
	}

	/*
	 * Main functions of the application
	 * DevOps Write some functions here
	 */
	
}
